<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.4.2
    site: https://github.com/ksky521/nodePPT
    date: 
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>HTML5-SVG</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.light.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide" data-transition='circle'><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>flex布局</h1>
<h2></h2>

</article></section></slide>
<slide class="slide" data-transition="horizontal"><section class="slide-wrapper"><article>
<h2>布局的传统解决方案</h2>
<ul>
<li>基于盒状模型，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal"><section class="slide-wrapper"><article>
<h2>浏览器支持</h2>
<ul>
<li>2009年，W3C提出了一种新的方案----Flex布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</li>
</ul>
<img src="./img/support.jpg" alt="">

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>一、Flex布局是什么？</h2>
<h3>Flex是Flexible Box的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。</h3>
<ul class="moveIn">
<li>任何一个容器都可以指定为Flex布局。<pre><code class="javascript">.box{
display: flex;
}
</code></pre>
</li>
<li>行内元素也可以使用Flex布局。<pre><code class="javascript">.box{
display: inline-flex;
}
</code></pre>
</li>
<li>Webkit内核的浏览器，必须加上-webkit前缀。<pre><code class="javascript">.box{
display: -webkit-flex; /* Safari */
display: flex;
}
</code></pre>
</li>
<li>注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>二、基本概念</h2>
<ul>
<li><font size=4> 采用Flex布局的元素，称为Flex容器（flex container），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称&quot;项目&quot;。</font>

<img src="./img/baseKnown.png" alt="">
<ul>
<li><font size=4> 容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。
项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</font></li>
</ul>
</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>三、容器的属性</h2>
<p>以下6个属性设置在容器上。</p>
<ul>
<li>flex-direction</li>
<li>flex-wrap</li>
<li>flex-flow</li>
<li>justify-content</li>
<li>align-items</li>
<li>align-content</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>3.1 flex-direction属性</h2>
<p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p>
<pre><code class="javascript">.box {
  flex-direction: row | row-reverse | column | column-reverse;
}
</code></pre>
<h3>它可能有4个值。</h3>
<ul>
<li>row（默认值）：主轴为水平方向，起点在左端。</li>
<li>row-reverse：主轴为水平方向，起点在右端。</li>
<li>column：主轴为垂直方向，起点在上沿。</li>
<li>column-reverse：主轴为垂直方向，起点在下沿。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>3.2 flex-wrap属性</h2>
<p>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p>
<pre><code class="javascript">.box{
  flex-wrap: nowrap | wrap | wrap-reverse;
}
</code></pre>
<ul>
<li>（1）nowrap（默认）：不换行。</li>
<li>（2）wrap：换行，第一行在上方。</li>
<li>（3）wrap-reverse：换行，第一行在下方。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>3.3 flex-flow</h2>
<p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p>
<pre><code class="javascript">.box {
  flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;
}
</code></pre>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>3.4 justify-content属性</h2>
<pre><code class="javascript">.box {
  justify-content: flex-start | flex-end | center | space-between | space-around;
}
</code></pre>
<p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p>
<ul>
<li>flex-start（默认值）：左对齐</li>
<li>flex-end：右对齐</li>
<li>center： 居中</li>
<li>space-between：两端对齐，项目之间的间隔都相等。</li>
<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>3.5 align-items属性</h2>
<p>align-items属性定义项目在交叉轴上如何对齐。</p>
<pre><code class="javascript">.box {
  align-items: flex-start | flex-end | center | baseline | stretch;
}
</code></pre>
<p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p>
<ul>
<li>flex-start：交叉轴的起点对齐。</li>
<li>flex-end：交叉轴的终点对齐。</li>
<li>center：交叉轴的中点对齐。</li>
<li>baseline: 项目的第一行文字的基线对齐。</li>
<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>3.6 align-content属性</h2>
<p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>
<pre><code class="javascript">.box {
  align-content: flex-start | flex-end | center | space-between | space-around | stretch;
}
</code></pre>
<p>该属性可能取6个值。</p>
<ul>
<li>flex-start：与交叉轴的起点对齐。</li>
<li>flex-end：与交叉轴的终点对齐。</li>
<li>center：与交叉轴的中点对齐。</li>
<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>
<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>
<li>stretch（默认值）：轴线占满整个交叉轴。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>四、项目的属性</h2>
<p>以下6个属性设置在项目上。</p>
<ul>
<li>order</li>
<li>flex-grow</li>
<li>flex-shrink</li>
<li>flex-basis</li>
<li>flex</li>
<li>align-self</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>4.1 order属性</h2>
<p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p>
<pre><code class="javascript">.item {
  order: &lt;integer&gt;;
}
</code></pre>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>4.2 flex-grow属性</h2>
<p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p>
<pre><code class="javascript">.item {
  flex-grow: &lt;number&gt;; /* default 0 */
}
</code></pre>
<p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>4.3 flex-shrink属性</h2>
<p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p>
<pre><code class="javascript">.item {
  flex-shrink: &lt;number&gt;; /* default 1 */
}
</code></pre>
<ul>
<li>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</li>
<li>负值对该属性无效。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>4.4 flex-basis属性</h2>
<p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p>
<pre><code class="javascript">.item {
  flex-basis: &lt;length&gt; | auto; /* default auto */
}
</code></pre>
<p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>4.5 flex属性</h2>
<p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p>
<pre><code class="javascript">.item {
  flex: none | [ &lt;&#39;flex-grow&#39;&gt; &lt;&#39;flex-shrink&#39;&gt;? || &lt;&#39;flex-basis&#39;&gt; ]
}
</code></pre>
<ul>
<li>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</li>
<li>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article>
<h2>4.6 align-self属性</h2>
<p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p>
<pre><code class="javascript">.item {
   align-self: auto | flex-start | flex-end | center | baseline | stretch;
 }
</code></pre>
<p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1><img src="./img/flex_demo.png" alt=""> <img src="./img/write_demo.png" alt=""></h1>
<p><a href="http://172.26.6.81:82/H5Demo/web_flex.html" target="_blank">flex_demo</a> <a href="http://172.26.6.81:82/H5Demo/writeDemo/index.html" target="_blank">write_demo</a></p>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>END TKS</h1>

</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.4.2</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'move',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>


<!--placeholder-->
</body>
</html>
